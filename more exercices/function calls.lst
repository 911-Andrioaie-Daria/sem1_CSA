     1                                  ;Read numbers (in base 10) in a loop until the digit '0' is read from the keyboard. Determine and display the smallest number from those that have been ;read.
     2                                  
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  extern exit, scanf, printf
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 00000000                    number dd 0
    14 00000004 6E756D6265723D2000          reading_message db 'number= ', 0
    15 0000000D 257500                      format db '%u', 0
    16 00000010 54686520736D616C6C-         printing_message db 'The smallest number is: %u', 0 
    16 00000019 657374206E756D6265-
    16 00000022 722069733A20257500 
    17 0000002B 05000000                    minimum dd 5
    18                                  segment code use32 class=code
    19                                      start:
    20                                      
    21                                          read_until_zero:
    22                                          
    23 00000000 68[04000000]                        push dword reading_message
    24 00000005 FF15[00000000]                      call [printf]
    25 0000000B 83C404                              add esp, 4
    26                                          
    27 0000000E 68[00000000]                        push dword number
    28 00000013 68[0D000000]                        push dword format
    29 00000018 FF15[00000000]                      call [scanf]
    30 0000001E 83C408                              add esp, 4*2
    31                                              
    32 00000021 833D[00000000]00                    cmp dword[number], 0
    33 00000028 7414                                je print_minimum
    34                                              
    35 0000002A A1[00000000]                        mov eax, [number]
    36 0000002F 3B05[2B000000]                      cmp eax, [minimum]
    37                                              
    38 00000035 7FC9                                jg read_until_zero
    39 00000037 A3[2B000000]                        mov [minimum], eax
    40 0000003C EBC2                                jmp read_until_zero
    41                                              
    42                                              
    43                                          print_minimum:
    44 0000003E FF35[2B000000]                      push dword [minimum]
    45 00000044 68[10000000]                        push dword printing_message
    46 00000049 FF15[00000000]                      call [printf]
    47 0000004F 83C408                              add esp, 4*2
    48                                          
    49 00000052 6A00                            push dword 0
    50 00000054 FF15[00000000]                  call [exit]
    51                                          
    52                                      
    53                                          
