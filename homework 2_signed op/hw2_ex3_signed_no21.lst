     1                                  ;The program computes the expression (a*a/b+b*b)/(2+b)+e-x in the signed representation
     2                                  bits 32
     3                                  
     4                                  global start        
     5                                  
     6                                  
     7                                  extern exit               
     8                                  import exit msvcrt.dll    
     9                                  
    10                                  
    11                                  segment data use32 class=data
    12 00000000 0C                          a db 12
    13 00000001 2800                        b dw 40
    14 00000003 64000000                    e dd 100
    15 00000007 F401000000000000            x dq 500
    16                                  
    17                                  segment code use32 class=code
    18                                      start:
    19                                         
    20                                          ;a*a/b
    21 00000000 A0[00000000]                    mov AL, [a]   ;AL=a   = 12
    22 00000005 F625[00000000]                  mul byte [a]  ;AX=AL*a = a*a =144
    23                                          
    24 0000000B 6699                            cwd           ;DX:AX = AX = a*a = 144
    25                                          
    26 0000000D 66F735[01000000]                div word [b]  ;AX = DX:AX/b = a*a/b =3
    27                                          
    28 00000014 6689C3                          mov BX, AX    ;BX = a*a/b =3
    29 00000017 66B90000                        mov CX, 0
    30                                          
    31                                          ;b*b
    32 0000001B 66A1[01000000]                  mov AX, [b]   ;AX = b =40
    33 00000021 66F725[01000000]                mul word [b]  ;DX:AX = AX*b = b*b = 1600
    34                                          
    35 00000028 6601D8                          add AX, BX
    36 0000002B 6611CA                          adc DX, CX   ;DX:AX= a*a/b + b*b = 1603
    37                                          
    38                                          ;(2+b)
    39 0000002E 668B1D[01000000]                mov BX, [b]  ;BX=b =40
    40 00000035 6683C302                        add BX, 2    ;BX=b+2 =42
    41                                          
    42                                          ;(a*a/b+b*b)/(2+b)
    43 00000039 66F7F3                          div BX       ;AX = DX:AX/BX = 38
    44                                          
    45 0000003C 98                              cwde         ;EAX = AX = (a*a/b+b*b)/(2+b) = 38
    46                                          
    47                                          
    48 0000003D 0305[03000000]                  add EAX, [e] ;EAX = (a*a/b+b*b)/(2+b) + e = 138
    49                                          
    50 00000043 99                              cdq          ;EDX:EAX = EAX = 138
    51                                          
    52                                          ;EDX:EAX = EDX:EAX - x
    53 00000044 2B05[07000000]                  sub EAX, dword[x]     
    54 0000004A 1B15[0B000000]                  sbb EDX, dword[x+4]   
    55                                          
    56                                          ;The final result is stored in EDX:EAX = -362
    57                                          
    58                                          
    59                                          
    60 00000050 6A00                            push    dword 0      
    61 00000052 FF15[00000000]                  call    [exit]       
