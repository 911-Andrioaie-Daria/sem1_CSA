     1                                  bits 32
     2                                  ;Being given a string of words, obtain the string (of bytes) of the digits in base 10 of each word from this string.
     3                                  global start
     4                                  ; Solutia: voi parcurge sirul in ordine inversa si voi lua de fiecare data ultima cifra din fiecare cuvant, apoi rastorn sirul 
     5                                  
     6                                  extern exit
     7                                  import exit msvcrt.dll
     8                                  
     9                                  
    10                                  segment data use32 class=data
    11 00000000 39302A51F411                sir dw 12345, 20778, 4596
    12                                      len_sir equ $-sir
    13 00000006 <res 00000064>              destination resb 100
    14 0000006A 0A00                        zece dw 10
    15                                  
    16                                  segment code use32 class=code
    17                                      start:
    18                                      
    19 00000000 FC                              cld
    20                                          
    21 00000001 B903000000                      mov ECX, len_sir/2
    22 00000006 BE[04000000]                    mov ESI, sir+len_sir-2
    23 0000000B BF[06000000]                    mov EDI, destination
    24                                          
    25 00000010 E33E                            jecxz EndOfProgram
    26                                          big_loop:
    27                                          
    28 00000012 FD                                  std 
    29 00000013 66AD                                LODSW    ; load a word from the source string into AX (ESI:= ESI - 2)
    30                                             
    31 00000015 6683F800                            cmp AX, 0
    32 00000019 741B                                jz next_word
    33                                              
    34                                              take_digits:
    35                                                  
    36 0000001B FC                                  cld
    37 0000001C 66BA0000                            mov DX, 0
    38 00000020 66F735[6A000000]                    div word[zece]       ; DX = DX:AX % 10
    39                                              
    40 00000027 6689C3                              mov BX, AX           ; save the result of dx:ax/zece
    41                                              
    42 0000002A 88D0                                mov AL, DL
    43                                              
    44 0000002C AA                                  STOSB
    45                                              
    46 0000002D 6689D8                              mov AX, BX
    47                                         
    48 00000030 6683F800                            cmp AX, 0
    49 00000034 7FE5                                jg take_digits
    50                                      
    51                                              next_word:
    52                                      
    53                                      
    54 00000036 E2DA                            loop big_loop
    55                                          
    56 00000038 BE[06000000]                    mov ESI, sir+len_sir
    57 0000003D 4F                              dec EDI
    58 0000003E 39FE                            cmp ESI, EDI
    59 00000040 770E                            ja EndOfProgram
    60                                          
    61                                          reverse:
    62                                          
    63 00000042 8A07                            mov AL, [edi]
    64 00000044 A4                              movsb
    65 00000045 4E                              dec esi
    66 00000046 83EF02                          sub edi, 2
    67 00000049 8806                            mov [esi], AL
    68 0000004B 46                              inc esi
    69                                         
    70 0000004C 39FE                            cmp esi, edi
    71                                          
    72 0000004E 72F2                            jb reverse
    73                                          
    74                                          
    75                                          EndOfProgram:
    76 00000050 6A00                            push dword 0
    77 00000052 FF15[00000000]                  call [exit]
