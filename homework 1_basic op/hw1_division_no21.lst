     1                                  ;The program computes the expression (f*g-a*b*e)/(h+c*d)
     2                                  
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  extern exit
     8                                  import exit msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 0A                          a db 10
    12 00000001 0A                          b db 10
    13 00000002 32                          c db 50
    14 00000003 0A                          d db 10
    15 00000004 0A00                        e dw 10
    16 00000006 2C01                        f dw 300
    17 00000008 0A00                        g dw 10
    18 0000000A F401                        h dw 500
    19                                  
    20                                  segment code use32 class=code
    21                                      start:
    22                                          
    23                                      ;a*b*e    
    24 00000000 A0[00000000]                    mov AL, [a]        ;AL=a=10
    25 00000005 F625[01000000]                  mul byte [b]       ;AX=AL*b=a*b = 100
    26 0000000B 66F725[04000000]                mul word [e]       ;DX:AX=AX*e   ;DX:AX=a*b*e = 1000
    27                                          
    28 00000012 6652                            push DX
    29 00000014 6659                            pop  CX
    30 00000016 6650                            push AX
    31 00000018 665B                            pop  BX            ;CX:BX=DX:AX=a*b*e = 1000
    32                                      
    33                                      ;f*g
    34 0000001A 66A1[06000000]                  mov AX, [f]        ;AX=f
    35 00000020 66F725[08000000]                mul word [g]       ;DX:AX=AX*g   ;DX:AX=f*g =3000
    36                                      
    37                                      ;f*g-a*b*e
    38 00000027 6629D8                          sub AX, BX     
    39 0000002A 6619CA                          sbb DX, CX         ;DX:AX=DX:AX-CX:BX  ;DX:AX=f*g-a*b*e = 2000
    40                                          
    41 0000002D 6652                            push DX
    42 0000002F 6650                            push AX
    43 00000031 59                              pop  ECX            ;ECX = DX:AX = f*g-a*b*e = 2000
    44                                          
    45                                       
    46                                       
    47                                      ;h+c*d
    48 00000032 A0[02000000]                    mov AL, [c]        ;AL=c = 50
    49 00000037 F625[03000000]                  mul byte [d]       ;AX=AL*d       ;AX=c*d = 500
    50 0000003D 660305[0A000000]                add AX, [h]        ;AX=AX+h       ;AX=h+c*d = 1000
    51                                          
    52 00000044 6689C3                          mov BX, AX         ;BX=AX         ;BX=h+c*d = 1000
    53                                       
    54                                       
    55 00000047 51                              push ECX
    56 00000048 6658                            pop AX
    57 0000004A 665A                            pop DX             ;DX:AX= f*g-a*b*e = 2000
    58                                      
    59                                      ;(f*g-a*b*e)/(h+c*d)
    60 0000004C 66F7F3                          div BX             ;AX <- DX:AX / BX, DX<-DX:AX % BX
    61                                          
    62                                      ;The final result is stored in AX = 1
    63                                      
    64 0000004F 6A00                            push dword 0
    65 00000051 FF15[00000000]                  call [exit]
